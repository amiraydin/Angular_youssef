{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/services/student/student.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction StudentDetailComponent_div_2_img_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 12);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"src\", !!ctx_r1.student.avatar ? ctx_r1.student.avatar + \"?id=\" + ctx_r1.student.id : \"https://i.pravatar.cc/100\", i0.ɵɵsanitizeUrl);\n  }\n}\nfunction StudentDetailComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function StudentDetailComponent_div_2_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateUser());\n    });\n    i0.ɵɵelementStart(2, \"div\", 4);\n    i0.ɵɵtemplate(3, StudentDetailComponent_div_2_img_3_Template, 1, 1, \"img\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 6)(5, \"div\", 7);\n    i0.ɵɵelement(6, \"input\", 8)(7, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"textarea\", 10);\n    i0.ɵɵelementStart(9, \"div\")(10, \"button\", 11);\n    i0.ɵɵtext(11, \"Add Notes\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.detailForm);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.student);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.student.FirstName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.student.LastName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.student.notes);\n  }\n}\nexport class StudentDetailComponent {\n  constructor(router, studentService, activateRoute) {\n    this.router = router;\n    this.studentService = studentService;\n    this.activateRoute = activateRoute;\n    this.student = [];\n    this.studentId = null;\n    this.studentId = this.activateRoute.snapshot.paramMap.get('id');\n    this.detailForm = new FormGroup({\n      notes: new FormControl('', Validators.required),\n      FirstName: new FormControl('', Validators.required),\n      avatar: new FormControl('https://i.pravatar.cc/100'),\n      LastName: new FormControl('', Validators.required)\n    });\n  }\n  ngOnInit() {\n    this.studentService.getOneUser(this.studentId).subscribe(data => this.student = data);\n  }\n  updateUser() {\n    this.studentService.updateUser(this.studentId, this.detailForm.value).subscribe(() => {\n      this.router.navigate(['/tickets']);\n      console.log('updated!!!');\n    });\n  }\n  static #_ = this.ɵfac = function StudentDetailComponent_Factory(t) {\n    return new (t || StudentDetailComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.StudentService), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StudentDetailComponent,\n    selectors: [[\"app-student-detail\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"container\", \"col-md-6\", \"mt-2\", \"border\", \"rounded\", \"bg-light\"], [\"class\", \"p-3\", 4, \"ngIf\"], [1, \"p-3\"], [\"action\", \"\", \"method\", \"post\", 3, \"formGroup\", \"ngSubmit\"], [1, \"\"], [\"class\", \"img-fluid border rounded-circle\", \"width\", \"100\", \"height\", \"100\", \"alt\", \"image student\", 3, \"src\", 4, \"ngIf\"], [1, \"d-flex\", \"flex-wrap\", \"justify-content-around\", \"p-2\"], [1, \"d-grid\"], [\"type\", \"text\", \"formControlName\", \"FirstName\", 3, \"value\"], [\"type\", \"text\", \"formControlName\", \"LastName\", 3, \"value\"], [\"inputmode\", \"latin\", \"type\", \"textarea\", \"required\", \"\", \"formControlName\", \"notes\", 3, \"value\"], [\"type\", \"submit\", 1, \"detailbtn\", \"border\", \"rounded\"], [\"width\", \"100\", \"height\", \"100\", \"alt\", \"image student\", 1, \"img-fluid\", \"border\", \"rounded-circle\", 3, \"src\"]],\n    template: function StudentDetailComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0);\n        i0.ɵɵtemplate(2, StudentDetailComponent_div_2_Template, 12, 5, \"div\", 1);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.student);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\".detailbtn[_ngcontent-%COMP%] {\\n    background-color: white;\\n}\\n\\n.detailbtn[_ngcontent-%COMP%]:hover {\\n    background-color: rgb(139, 226, 85);\\n    color: white;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc3R1ZGVudHMvc3R1ZGVudC1kZXRhaWwvc3R1ZGVudC1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLG1DQUFtQztJQUNuQyxZQUFZO0FBQ2hCIiwic291cmNlc0NvbnRlbnQiOlsiLmRldGFpbGJ0biB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLmRldGFpbGJ0bjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTM5LCAyMjYsIDg1KTtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelement","ɵɵproperty","ctx_r1","student","avatar","id","ɵɵsanitizeUrl","ɵɵelementStart","ɵɵlistener","StudentDetailComponent_div_2_Template_form_ngSubmit_1_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","updateUser","ɵɵtemplate","StudentDetailComponent_div_2_img_3_Template","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ctx_r0","detailForm","ɵɵpropertyInterpolate","FirstName","LastName","notes","StudentDetailComponent","constructor","router","studentService","activateRoute","studentId","snapshot","paramMap","get","required","ngOnInit","getOneUser","subscribe","data","value","navigate","console","log","_","ɵɵdirectiveInject","i1","Router","i2","StudentService","ActivatedRoute","_2","selectors","decls","vars","consts","template","StudentDetailComponent_Template","rf","ctx","StudentDetailComponent_div_2_Template"],"sources":["C:\\Users\\Amir\\Desktop\\angular_tp\\Angular_Front\\src\\app\\students\\student-detail\\student-detail.component.ts","C:\\Users\\Amir\\Desktop\\angular_tp\\Angular_Front\\src\\app\\students\\student-detail\\student-detail.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Student } from 'src/models/student';\nimport { StudentService } from 'src/services/student/student.service';\n\n@Component({\n  selector: 'app-student-detail',\n  templateUrl: './student-detail.component.html',\n  styleUrls: ['./student-detail.component.css']\n})\nexport class StudentDetailComponent implements OnInit {\n\n  public student: any = [];\n  private studentId: string | null = null;\n  public detailForm: FormGroup;\n  constructor(public router: Router, public studentService: StudentService, private activateRoute: ActivatedRoute) {\n    this.studentId = this.activateRoute.snapshot.paramMap.get('id');\n\n    this.detailForm = new FormGroup({\n      notes: new FormControl<String>('', Validators.required),\n      FirstName: new FormControl<String>('', Validators.required),\n      avatar: new FormControl<string>('https://i.pravatar.cc/100'),\n      LastName: new FormControl<String>('', Validators.required)\n    });\n  }\n\n  ngOnInit(): void {\n    this.studentService.getOneUser(this.studentId).subscribe((data: {}) => this.student = data);\n  }\n\n  updateUser() {\n    this.studentService.updateUser(this.studentId, this.detailForm.value).subscribe(() => {\n      this.router.navigate(['/tickets']);\n      console.log('updated!!!');\n    });\n  }\n  // studentSelected(student: Student) {\n  //   return this.studentService.getOneUser(student.id).subscribe((data: {}) => {\n  //     console.log('one user id', data);\n  //   })\n  // }\n\n}\n","<div>\n    <div class=\"container col-md-6 mt-2 border rounded bg-light\">\n        <div *ngIf=\"student\" class=\"p-3\">\n            <form action=\"\" method=\"post\" [formGroup]=\"detailForm\" (ngSubmit)=\"updateUser()\">\n                <div class=\"\">\n                    <img *ngIf=\"student\"\n                        [src]=\"!!student.avatar ? student.avatar+'?id='+student.id : 'https://i.pravatar.cc/100'\"\n                        class=\"img-fluid border rounded-circle\" width=\"100\" height=\"100\" alt=\"image student\" />\n                </div>\n                <div class=\"d-flex flex-wrap justify-content-around p-2\">\n                    <div class=\"d-grid\">\n                        <input type=\"text\" formControlName=\"FirstName\" value=\"{{student.FirstName}}\" />\n                        <input type=\"text\" formControlName=\"LastName\" value=\"{{student.LastName}}\" />\n                    </div>\n                    <textarea inputmode=\"latin\" type=\"textarea\" required formControlName=\"notes\"\n                        value=\"{{student.notes}}\"></textarea>\n                    <div>\n                        <button class=\"detailbtn border rounded\" type=\"submit\">Add\n                            Notes</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}