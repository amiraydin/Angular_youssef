{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let StudentListComponent = class StudentListComponent {\n  constructor(studentService, ticketService, router) {\n    this.studentService = studentService;\n    this.ticketService = ticketService;\n    this.router = router;\n    this.student_list = [];\n    this.ticket_studentId = [];\n  }\n  ngOnInit() {\n    this.getTicketStudentIds();\n    this.loadStudents();\n  }\n  getTicketStudentIds() {\n    return this.ticketService.getTickets().subscribe(data => {\n      this.ticket_studentId = data;\n      // console.log('studentList ticket ids', data);\n    });\n  }\n\n  studentSelected(student) {\n    return this.studentService.getOneUser(student.id).subscribe(data => {\n      // console.log('one user id', data);\n      // console.log('one user id', student.id);\n      this.router.navigate(['/students/' + student.id]);\n    });\n  }\n  studentDelete(student) {\n    try {\n      let idExiste = this.ticket_studentId.find(st => st.studentId == student.id);\n      // console.log(\"id is here\", idExiste);\n      if (idExiste) alert(\"You should delete the ticket first !\");else {\n        this.studentService.deleteUser(student.id).subscribe(() => {\n          this.router.navigate(['/stud_form']);\n        });\n      }\n    } catch (error) {\n      console.log(\"error student list\", error);\n    }\n  }\n  loadStudents() {\n    return this.studentService.getUsers().subscribe(data => {\n      this.student_list = data;\n    });\n  }\n};\nStudentListComponent = __decorate([Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student-list.component.css']\n})], StudentListComponent);","map":{"version":3,"names":["Component","StudentListComponent","constructor","studentService","ticketService","router","student_list","ticket_studentId","ngOnInit","getTicketStudentIds","loadStudents","getTickets","subscribe","data","studentSelected","student","getOneUser","id","navigate","studentDelete","idExiste","find","st","studentId","alert","deleteUser","error","console","log","getUsers","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Amir\\Desktop\\angular_tp\\Angular_Front\\src\\app\\students\\student-list\\student-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Student } from 'src/models/student';\nimport { StudentService } from 'src/services/student/student.service';\nimport { TicketService } from 'src/services/ticket/ticket.service';\n\n@Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student-list.component.css']\n})\nexport class StudentListComponent implements OnInit {\n\n  public student_list: any = [];\n  public ticket_studentId: any = [];\n  constructor(public studentService: StudentService, public ticketService: TicketService, public router: Router) {\n\n  }\n\n  ngOnInit(): void {\n    this.getTicketStudentIds();\n    this.loadStudents();\n  }\n\n  getTicketStudentIds() {\n    return this.ticketService.getTickets().subscribe((data: {}) => {\n      this.ticket_studentId = data;\n      // console.log('studentList ticket ids', data);\n    })\n  }\n\n  studentSelected(student: Student) {\n    return this.studentService.getOneUser(student.id).subscribe((data: {}) => {\n      // console.log('one user id', data);\n      // console.log('one user id', student.id);\n      this.router.navigate(['/students/' + student.id])\n    })\n  }\n\n  studentDelete(student: Student) {\n    try {\n      let idExiste = this.ticket_studentId.find((st: any) => st.studentId == student.id);\n      // console.log(\"id is here\", idExiste);\n      if (idExiste) alert(\"You should delete the ticket first !\");\n      else {\n        this.studentService.deleteUser(student.id).subscribe(() => {\n          this.router.navigate(['/stud_form'])\n        })\n      }\n    } catch (error) {\n      console.log(\"error student list\", error);\n    }\n  }\n\n  loadStudents() {\n    return this.studentService.getUsers().subscribe((data: {}) => { this.student_list = data })\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAW1C,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAI/BC,YAAmBC,cAA8B,EAASC,aAA4B,EAASC,MAAc;IAA1F,KAAAF,cAAc,GAAdA,cAAc;IAAyB,KAAAC,aAAa,GAAbA,aAAa;IAAwB,KAAAC,MAAM,GAANA,MAAM;IAF9F,KAAAC,YAAY,GAAQ,EAAE;IACtB,KAAAC,gBAAgB,GAAQ,EAAE;EAGjC;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,mBAAmB,EAAE;IAC1B,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAD,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACL,aAAa,CAACO,UAAU,EAAE,CAACC,SAAS,CAAEC,IAAQ,IAAI;MAC5D,IAAI,CAACN,gBAAgB,GAAGM,IAAI;MAC5B;IACF,CAAC,CAAC;EACJ;;EAEAC,eAAeA,CAACC,OAAgB;IAC9B,OAAO,IAAI,CAACZ,cAAc,CAACa,UAAU,CAACD,OAAO,CAACE,EAAE,CAAC,CAACL,SAAS,CAAEC,IAAQ,IAAI;MACvE;MACA;MACA,IAAI,CAACR,MAAM,CAACa,QAAQ,CAAC,CAAC,YAAY,GAAGH,OAAO,CAACE,EAAE,CAAC,CAAC;IACnD,CAAC,CAAC;EACJ;EAEAE,aAAaA,CAACJ,OAAgB;IAC5B,IAAI;MACF,IAAIK,QAAQ,GAAG,IAAI,CAACb,gBAAgB,CAACc,IAAI,CAAEC,EAAO,IAAKA,EAAE,CAACC,SAAS,IAAIR,OAAO,CAACE,EAAE,CAAC;MAClF;MACA,IAAIG,QAAQ,EAAEI,KAAK,CAAC,sCAAsC,CAAC,CAAC,KACvD;QACH,IAAI,CAACrB,cAAc,CAACsB,UAAU,CAACV,OAAO,CAACE,EAAE,CAAC,CAACL,SAAS,CAAC,MAAK;UACxD,IAAI,CAACP,MAAM,CAACa,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;QACtC,CAAC,CAAC;;KAEL,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,KAAK,CAAC;;EAE5C;EAEAhB,YAAYA,CAAA;IACV,OAAO,IAAI,CAACP,cAAc,CAAC0B,QAAQ,EAAE,CAACjB,SAAS,CAAEC,IAAQ,IAAI;MAAG,IAAI,CAACP,YAAY,GAAGO,IAAI;IAAC,CAAC,CAAC;EAC7F;CACD;AA9CYZ,oBAAoB,GAAA6B,UAAA,EALhC9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWhC,oBAAoB,CA8ChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}