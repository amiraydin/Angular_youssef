{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, catchError, retry, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// import { UserApiService } from 'src/user-crud/user-api.service';\nexport class StudentService {\n  constructor(http) {\n    this.http = http;\n    this.apiURL = 'http://localhost:5000';\n    this.httpOption = {\n      headers: new HttpHeaders({\n        'content-type': 'application/json'\n      })\n    };\n    this.studentList = [];\n    this.students$ = new BehaviorSubject(this.studentList);\n  }\n  getUsers() {\n    return this.http.get(this.apiURL + '/api/students').pipe(retry(1), catchError(this.handleError));\n  }\n  getOneUser(id) {\n    return this.http.get(this.apiURL + '/api/students' + id).pipe(retry(1), catchError(this.handleError));\n  }\n  createUser(user) {\n    return this.http.post(this.apiURL + '/api/students/', user, this.httpOption).pipe(retry(1), catchError(this.handleError));\n  }\n  updateUser(id, user) {\n    return this.http.put(this.apiURL + '/api/students' + id, JSON.stringify(user), this.httpOption).pipe(retry(1), catchError(this.handleError));\n  }\n  deleteUser(id) {\n    return this.http.delete(this.apiURL + '/api/students' + id, this.httpOption).pipe(retry(1), catchError(this.handleError));\n  }\n  // addAnUser(student: Student) {\n  //     this.restApi.createUser(student).subscribe((data: {}) => {\n  //         this.router.navigate(['/tickets']);\n  //     })\n  // }\n  handleError(error) {\n    let errMsg = '';\n    if (error.error instanceof ErrorEvent) errMsg = error.error.message;else errMsg = `Error Code : ${error.statut}\\nMessage : ${error.message}`;\n    window.alert(errMsg);\n    return throwError(() => {\n      return errMsg;\n    });\n  }\n  static #_ = this.ɵfac = function StudentService_Factory(t) {\n    return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StudentService,\n    factory: StudentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","BehaviorSubject","catchError","retry","throwError","StudentService","constructor","http","apiURL","httpOption","headers","studentList","students$","getUsers","get","pipe","handleError","getOneUser","id","createUser","user","post","updateUser","put","JSON","stringify","deleteUser","delete","error","errMsg","ErrorEvent","message","statut","window","alert","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Amir\\Desktop\\angular_tp\\Angular_Front\\src\\services\\student\\student.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, catchError, retry, throwError } from 'rxjs';\r\n// import { STUDENTS_MOCKED } from 'src/mocks/student.mock';\r\nimport { Student } from 'src/models/student';\r\n// import { UserApiService } from 'src/user-crud/user-api.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class StudentService {\r\n\r\n    apiURL = 'http://localhost:5000';\r\n\r\n    httpOption = {\r\n        headers: new HttpHeaders({\r\n            'content-type': 'application/json',\r\n        })\r\n    }\r\n\r\n    private studentList: Student[] = [];\r\n    public students$: BehaviorSubject<Student[]> = new BehaviorSubject(this.studentList);\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getUsers() {\r\n        return this.http.get<Student>(this.apiURL + '/api/students').pipe(retry(1), catchError(this.handleError));\r\n    }\r\n\r\n    getOneUser(id: any) {\r\n        return this.http.get<Student>(this.apiURL + '/api/students' + id).pipe(retry(1), catchError(this.handleError));\r\n    }\r\n\r\n    createUser(user: any) {\r\n        return this.http.post<Student>(this.apiURL + '/api/students/', user, this.httpOption).pipe(retry(1), catchError(this.handleError));\r\n    }\r\n\r\n    updateUser(id: any, user: any) {\r\n        return this.http.put<Student>(this.apiURL + '/api/students' + id, JSON.stringify(user), this.httpOption).pipe(retry(1), catchError(this.handleError));\r\n    }\r\n\r\n    deleteUser(id: any) {\r\n        return this.http.delete<Student>(this.apiURL + '/api/students' + id, this.httpOption).pipe(retry(1), catchError(this.handleError));\r\n    }\r\n\r\n\r\n    // addAnUser(student: Student) {\r\n    //     this.restApi.createUser(student).subscribe((data: {}) => {\r\n    //         this.router.navigate(['/tickets']);\r\n    //     })\r\n    // }\r\n    handleError(error: any) {\r\n        let errMsg = '';\r\n        if (error.error instanceof ErrorEvent) errMsg = error.error.message;\r\n        else errMsg = `Error Code : ${error.statut}\\nMessage : ${error.message}`;\r\n        window.alert(errMsg);\r\n        return throwError(() => {\r\n            return errMsg;\r\n        })\r\n    }\r\n}"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,eAAe,EAAcC,UAAU,EAAEC,KAAK,EAAEC,UAAU,QAAQ,MAAM;;;AAGjF;AAMA,OAAM,MAAOC,cAAc;EAavBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAXxB,KAAAC,MAAM,GAAG,uBAAuB;IAEhC,KAAAC,UAAU,GAAG;MACTC,OAAO,EAAE,IAAIV,WAAW,CAAC;QACrB,cAAc,EAAE;OACnB;KACJ;IAEO,KAAAW,WAAW,GAAc,EAAE;IAC5B,KAAAC,SAAS,GAA+B,IAAIX,eAAe,CAAC,IAAI,CAACU,WAAW,CAAC;EAGpF;EAEAE,QAAQA,CAAA;IACJ,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAU,IAAI,CAACN,MAAM,GAAG,eAAe,CAAC,CAACO,IAAI,CAACZ,KAAK,CAAC,CAAC,CAAC,EAAED,UAAU,CAAC,IAAI,CAACc,WAAW,CAAC,CAAC;EAC7G;EAEAC,UAAUA,CAACC,EAAO;IACd,OAAO,IAAI,CAACX,IAAI,CAACO,GAAG,CAAU,IAAI,CAACN,MAAM,GAAG,eAAe,GAAGU,EAAE,CAAC,CAACH,IAAI,CAACZ,KAAK,CAAC,CAAC,CAAC,EAAED,UAAU,CAAC,IAAI,CAACc,WAAW,CAAC,CAAC;EAClH;EAEAG,UAAUA,CAACC,IAAS;IAChB,OAAO,IAAI,CAACb,IAAI,CAACc,IAAI,CAAU,IAAI,CAACb,MAAM,GAAG,gBAAgB,EAAEY,IAAI,EAAE,IAAI,CAACX,UAAU,CAAC,CAACM,IAAI,CAACZ,KAAK,CAAC,CAAC,CAAC,EAAED,UAAU,CAAC,IAAI,CAACc,WAAW,CAAC,CAAC;EACtI;EAEAM,UAAUA,CAACJ,EAAO,EAAEE,IAAS;IACzB,OAAO,IAAI,CAACb,IAAI,CAACgB,GAAG,CAAU,IAAI,CAACf,MAAM,GAAG,eAAe,GAAGU,EAAE,EAAEM,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,EAAE,IAAI,CAACX,UAAU,CAAC,CAACM,IAAI,CAACZ,KAAK,CAAC,CAAC,CAAC,EAAED,UAAU,CAAC,IAAI,CAACc,WAAW,CAAC,CAAC;EACzJ;EAEAU,UAAUA,CAACR,EAAO;IACd,OAAO,IAAI,CAACX,IAAI,CAACoB,MAAM,CAAU,IAAI,CAACnB,MAAM,GAAG,eAAe,GAAGU,EAAE,EAAE,IAAI,CAACT,UAAU,CAAC,CAACM,IAAI,CAACZ,KAAK,CAAC,CAAC,CAAC,EAAED,UAAU,CAAC,IAAI,CAACc,WAAW,CAAC,CAAC;EACtI;EAGA;EACA;EACA;EACA;EACA;EACAA,WAAWA,CAACY,KAAU;IAClB,IAAIC,MAAM,GAAG,EAAE;IACf,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAED,MAAM,GAAGD,KAAK,CAACA,KAAK,CAACG,OAAO,CAAC,KAC/DF,MAAM,GAAG,gBAAgBD,KAAK,CAACI,MAAM,eAAeJ,KAAK,CAACG,OAAO,EAAE;IACxEE,MAAM,CAACC,KAAK,CAACL,MAAM,CAAC;IACpB,OAAOzB,UAAU,CAAC,MAAK;MACnB,OAAOyB,MAAM;IACjB,CAAC,CAAC;EACN;EAAC,QAAAM,CAAA,G;qBAlDQ9B,cAAc,EAAA+B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdnC,cAAc;IAAAoC,OAAA,EAAdpC,cAAc,CAAAqC,IAAA;IAAAC,UAAA,EAHX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}