{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { STUDENTS_MOCKED } from 'src/mocks/student.mock';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StudentService {\n  constructor(http) {\n    this.http = http;\n    this.apiURL = 'http://localhost:3000';\n    this.studentList = STUDENTS_MOCKED;\n    this.students$ = new BehaviorSubject(this.studentList);\n  }\n  static #_ = this.ɵfac = function StudentService_Factory(t) {\n    return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StudentService,\n    factory: StudentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","STUDENTS_MOCKED","StudentService","constructor","http","apiURL","studentList","students$","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Amir\\Desktop\\angular_tp\\Angular_Front\\src\\services\\student\\student.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { STUDENTS_MOCKED } from 'src/mocks/student.mock';\r\nimport { Student } from 'src/models/student';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class StudentService {\r\n\r\n    apiURL = 'http://localhost:3000';\r\n    private studentList: Student[] = STUDENTS_MOCKED;\r\n    public students$: BehaviorSubject<Student[]> = new BehaviorSubject(this.studentList);\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n}"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;AACtC,SAASC,eAAe,QAAQ,wBAAwB;;;AAQxD,OAAM,MAAOC,cAAc;EAMvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJxB,KAAAC,MAAM,GAAG,uBAAuB;IACxB,KAAAC,WAAW,GAAcL,eAAe;IACzC,KAAAM,SAAS,GAA+B,IAAIP,eAAe,CAAC,IAAI,CAACM,WAAW,CAAC;EAGpF;EAAC,QAAAE,CAAA,G;qBAPQN,cAAc,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdX,cAAc;IAAAY,OAAA,EAAdZ,cAAc,CAAAa,IAAA;IAAAC,UAAA,EAHX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}