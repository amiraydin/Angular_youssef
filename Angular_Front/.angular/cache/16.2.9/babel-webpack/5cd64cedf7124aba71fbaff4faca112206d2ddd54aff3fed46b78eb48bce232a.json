{"ast":null,"code":"import { BehaviorSubject, catchError, retry, throwError } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StudentService {\n  constructor(http) {\n    this.http = http;\n    this.apiURL = 'http://localhost:3000';\n    this.studentList = [];\n    this.students$ = new BehaviorSubject(this.studentList);\n    this.httpOption = {\n      headers: new HttpHeaders({\n        'content-type': 'application/json'\n      })\n    };\n  }\n  ngOnInit() {\n    this.loadUsers();\n  }\n  loadUsers() {\n    return this.restApi.getUsers().subscribe(data => {\n      this.users = data;\n    });\n  }\n  getStudent() {\n    return this.http.get(this.apiURL + '/students').pipe(retry(1), catchError(this.handleError));\n  }\n  handleError(error) {\n    let errMsg = '';\n    if (error.error instanceof ErrorEvent) errMsg = error.error.message;else errMsg = `Error Code : ${error.statut}\\nMessage : ${error.message}`;\n    window.alert(errMsg);\n    return throwError(() => {\n      return errMsg;\n    });\n  }\n  static #_ = this.ɵfac = function StudentService_Factory(t) {\n    return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StudentService,\n    factory: StudentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","catchError","retry","throwError","HttpHeaders","StudentService","constructor","http","apiURL","studentList","students$","httpOption","headers","ngOnInit","loadUsers","restApi","getUsers","subscribe","data","users","getStudent","get","pipe","handleError","error","errMsg","ErrorEvent","message","statut","window","alert","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Amir\\Desktop\\angular_tp\\Angular_Front\\src\\services\\student\\student.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, catchError, retry, throwError } from 'rxjs';\r\n// import { STUDENTS_MOCKED } from 'src/mocks/student.mock';\r\nimport { Student } from 'src/models/student';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class StudentService {\r\n\r\n    apiURL = 'http://localhost:3000';\r\n    private studentList: Student[] = [];\r\n    public students$: BehaviorSubject<Student[]> = new BehaviorSubject(this.studentList);\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n    httpOption = {\r\n        headers: new HttpHeaders({\r\n            'content-type': 'application/json',\r\n        })\r\n    }\r\n    ngOnInit(): any {\r\n        this.loadUsers();\r\n    }\r\n\r\n    loadUsers() {\r\n        return this.restApi.getUsers().subscribe((data: {}) => {\r\n            this.users = data;\r\n        });\r\n    }\r\n    getStudent(): Observable<Student> {\r\n        return this.http.get<Student>(this.apiURL + '/students').pipe(retry(1), catchError(this.handleError));\r\n    }\r\n\r\n    handleError(error: any) {\r\n        let errMsg = '';\r\n        if (error.error instanceof ErrorEvent) errMsg = error.error.message;\r\n        else errMsg = `Error Code : ${error.statut}\\nMessage : ${error.message}`;\r\n        window.alert(errMsg);\r\n        return throwError(() => {\r\n            return errMsg;\r\n        })\r\n    }\r\n}"],"mappings":"AACA,SAASA,eAAe,EAAcC,UAAU,EAAEC,KAAK,EAAEC,UAAU,QAAQ,MAAM;AAGjF,SAAqBC,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,cAAc;EAMvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJxB,KAAAC,MAAM,GAAG,uBAAuB;IACxB,KAAAC,WAAW,GAAc,EAAE;IAC5B,KAAAC,SAAS,GAA+B,IAAIV,eAAe,CAAC,IAAI,CAACS,WAAW,CAAC;IAIpF,KAAAE,UAAU,GAAG;MACTC,OAAO,EAAE,IAAIR,WAAW,CAAC;QACrB,cAAc,EAAE;OACnB;KACJ;EALD;EAMAS,QAAQA,CAAA;IACJ,IAAI,CAACC,SAAS,EAAE;EACpB;EAEAA,SAASA,CAAA;IACL,OAAO,IAAI,CAACC,OAAO,CAACC,QAAQ,EAAE,CAACC,SAAS,CAAEC,IAAQ,IAAI;MAClD,IAAI,CAACC,KAAK,GAAGD,IAAI;IACrB,CAAC,CAAC;EACN;EACAE,UAAUA,CAAA;IACN,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAU,IAAI,CAACb,MAAM,GAAG,WAAW,CAAC,CAACc,IAAI,CAACpB,KAAK,CAAC,CAAC,CAAC,EAAED,UAAU,CAAC,IAAI,CAACsB,WAAW,CAAC,CAAC;EACzG;EAEAA,WAAWA,CAACC,KAAU;IAClB,IAAIC,MAAM,GAAG,EAAE;IACf,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAED,MAAM,GAAGD,KAAK,CAACA,KAAK,CAACG,OAAO,CAAC,KAC/DF,MAAM,GAAG,gBAAgBD,KAAK,CAACI,MAAM,eAAeJ,KAAK,CAACG,OAAO,EAAE;IACxEE,MAAM,CAACC,KAAK,CAACL,MAAM,CAAC;IACpB,OAAOtB,UAAU,CAAC,MAAK;MACnB,OAAOsB,MAAM;IACjB,CAAC,CAAC;EACN;EAAC,QAAAM,CAAA,G;qBAlCQ1B,cAAc,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAd/B,cAAc;IAAAgC,OAAA,EAAdhC,cAAc,CAAAiC,IAAA;IAAAC,UAAA,EAHX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}