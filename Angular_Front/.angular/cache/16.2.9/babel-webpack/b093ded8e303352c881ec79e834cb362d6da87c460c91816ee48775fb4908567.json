{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/ticket/ticket.service\";\nimport * as i3 from \"@angular/common\";\nexport class TicketFormComponent {\n  constructor(formBuilder, ticketService) {\n    this.formBuilder = formBuilder;\n    this.ticketService = ticketService;\n    // Form creation\n    this.ticketForm = this.formBuilder.group({\n      title: [''],\n      description: [''],\n      majoro: ['']\n    });\n    // You can also add validators to your inputs such as required, maxlength or even create your own validator!\n    // More information: https://angular.io/guide/reactive-forms#simple-form-validation\n    // Advanced validation: https://angular.io/guide/form-validation#reactive-form-validation\n  }\n\n  ngOnInit() {}\n  addTicket() {\n    const ticketToCreate = this.ticketForm.getRawValue();\n    ticketToCreate.date = new Date();\n    ticketToCreate.student = 'Me';\n    this.ticketService.addTicket(ticketToCreate);\n  }\n  static #_ = this.ɵfac = function TicketFormComponent_Factory(t) {\n    return new (t || TicketFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TicketService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TicketFormComponent,\n    selectors: [[\"app-ticket-form\"]],\n    decls: 24,\n    vars: 7,\n    consts: [[1, \"ticket-form\", 3, \"formGroup\"], [\"for\", \"title\", 1, \"mt-2\"], [\"type\", \"text\", \"id\", \"title\", 1, \"input-custom\", 3, \"formControlName\"], [\"for\", \"description\", 1, \"mt-2\"], [\"type\", \"text\", \"id\", \"description\", 1, \"input-custom\", 3, \"formControlName\"], [\"for\", \"majoro\", 1, \"mt-2\"], [\"type\", \"text\", \"id\", \"majoro\", 1, \"input-custom\", 3, \"formControlName\"], [\"type\", \"submit\", 1, \"btn-custom\", 3, \"click\"]],\n    template: function TicketFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1, \"Create a new ticket\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0)(3, \"label\", 1);\n        i0.ɵɵtext(4, \" Title \");\n        i0.ɵɵelement(5, \"br\")(6, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"br\");\n        i0.ɵɵelementStart(8, \"label\", 3);\n        i0.ɵɵtext(9, \" Description \");\n        i0.ɵɵelement(10, \"br\")(11, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"br\");\n        i0.ɵɵelementStart(13, \"label\", 5);\n        i0.ɵɵtext(14, \" Major \");\n        i0.ɵɵelement(15, \"br\")(16, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"br\");\n        i0.ɵɵelementStart(18, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function TicketFormComponent_Template_button_click_18_listener() {\n          return ctx.addTicket();\n        });\n        i0.ɵɵtext(19, \"Create\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(20, \"br\")(21, \"br\");\n        i0.ɵɵtext(22);\n        i0.ɵɵpipe(23, \"json\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.ticketForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControlName\", \"title\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControlName\", \"description\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControlName\", \"majoro\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(23, 5, ctx.ticketForm.getRawValue()));\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.JsonPipe],\n    styles: [\"\\n\\n\\n\\n.card[_ngcontent-%COMP%] {\\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 5px 5px 1px rgba(0, 0, 0, 0.12);\\n  padding-left: 2em;\\n  padding-right: 1em;\\n  padding-top: 1em;\\n  padding-bottom: 1em;\\n  border-radius: 0.5em;\\n  background-color: white;\\n}\\n\\n.input-custom[_ngcontent-%COMP%], .btn-custom[_ngcontent-%COMP%] {\\n  border: 1px solid #282828;\\n  border-radius: 0.5em;\\n  height: 35px;\\n}\\n\\n.input-custom[_ngcontent-%COMP%] {\\n  padding: 1px 0 1px 10px;\\n}\\n\\n.btn-custom[_ngcontent-%COMP%] {\\n  margin-top: 0.4em;\\n  background-color: white;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  background-color: transparent;\\n  border: none;\\n  font-size: 1em;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvdmFyaWFibGVzLnNjc3MiLCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL2NhcmQuc2NzcyIsIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGlja2V0cy90aWNrZXQtZm9ybS90aWNrZXQtZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFBQTtBQ0VBO0VBQ0UsaUhBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxtQkFBQTtFQUNBLG9CREdhO0VDRmIsdUJBQUE7QUNFRjs7QURDQTtFQUNFLHlCQUFBO0VBQ0Esb0JESGE7RUNJYixZQUFBO0FDRUY7O0FEQ0E7RUFDRSx1QkFBQTtBQ0VGOztBRENBO0VBQ0UsaUJBQUE7RUFDQSx1QkFBQTtBQ0VGOztBQXhCQTtFQUNFLDZCQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUEyQkYiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuIFRoaXMgZmlsZSBjb250YWlucyBhbGwgdGhlIHZhcmlhYmxlcyB1c2VkIGZvciBzdHlsaW5nIHlvdXIgYXBwLlxyXG4gKi9cclxuXHJcbi8vIENvbG9yc1xyXG4kYmFja2dyb3VuZC1jb2xvcjogI0YwRjBGMDtcclxuJGxpbmVhckdyYWRpZW50OiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICMyNGM2ZGMsICM1MTRhOWQpO1xyXG5cclxuJHdoaXRlOiB3aGl0ZTtcclxuXHJcbi8vIEJvcmRlcnNcclxuJGJvcmRlclJhZGl1czogMC41ZW07XHJcbiIsIkBpbXBvcnQgXCIuL3ZhcmlhYmxlc1wiO1xyXG5cclxuLmNhcmQge1xyXG4gIGJveC1zaGFkb3c6IDAgM3B4IDFweCAtMnB4IHJnYmEoMCwwLDAsLjIpLCAwIDJweCAycHggMCByZ2JhKDAsMCwwLC4xNCksIDAgNXB4IDVweCAxcHggcmdiYSgwLDAsMCwuMTIpO1xyXG4gIHBhZGRpbmctbGVmdDogMmVtO1xyXG4gIHBhZGRpbmctcmlnaHQ6IDFlbTtcclxuICBwYWRkaW5nLXRvcDogMWVtO1xyXG4gIHBhZGRpbmctYm90dG9tOiAxZW07XHJcbiAgYm9yZGVyLXJhZGl1czogJGJvcmRlclJhZGl1cztcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLmlucHV0LWN1c3RvbSwgLmJ0bi1jdXN0b20ge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICMyODI4Mjg7XHJcbiAgYm9yZGVyLXJhZGl1czogJGJvcmRlclJhZGl1cztcclxuICBoZWlnaHQ6IDM1cHg7XHJcbn1cclxuXHJcbi5pbnB1dC1jdXN0b20ge1xyXG4gIHBhZGRpbmc6IDFweCAwIDFweCAxMHB4O1xyXG59XHJcblxyXG4uYnRuLWN1c3RvbSB7XHJcbiAgbWFyZ2luLXRvcDogMC40ZW07XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuIiwiQGltcG9ydCAnLi4vLi4vLi4vc3R5bGVzL2NhcmQuc2Nzcyc7XHJcblxyXG5idXR0b24ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBmb250LXNpemU6IDFlbTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["TicketFormComponent","constructor","formBuilder","ticketService","ticketForm","group","title","description","majoro","ngOnInit","addTicket","ticketToCreate","getRawValue","date","Date","student","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","TicketService","_2","selectors","decls","vars","consts","template","TicketFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","TicketFormComponent_Template_button_click_18_listener","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate","ɵɵpipeBind1"],"sources":["C:\\Users\\Amir\\Desktop\\angular_tp\\Angular_Front\\src\\app\\tickets\\ticket-form\\ticket-form.component.ts","C:\\Users\\Amir\\Desktop\\angular_tp\\Angular_Front\\src\\app\\tickets\\ticket-form\\ticket-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { TicketService } from '../../../services/ticket/ticket.service';\r\nimport { Ticket } from '../../../models/ticket';\r\n\r\n@Component({\r\n  selector: 'app-ticket-form',\r\n  templateUrl: './ticket-form.component.html',\r\n  styleUrls: ['./ticket-form.component.scss']\r\n})\r\nexport class TicketFormComponent implements OnInit {\r\n\r\n  // Note: We are using here ReactiveForms to create our form. Be careful when you look for some documentation to\r\n  // avoid TemplateDrivenForm (another type of form)\r\n  /**\r\n   * TicketForm: Object which manages the form in our component.\r\n   * More information about Reactive Forms: https://angular.io/guide/reactive-forms\r\n   */\r\n  public ticketForm: FormGroup;\r\n\r\n  constructor(public formBuilder: FormBuilder, public ticketService: TicketService) {\r\n    // Form creation\r\n    this.ticketForm = this.formBuilder.group({\r\n      title: [''],\r\n      description: [''],\r\n      majoro: ['']\r\n    });\r\n    // You can also add validators to your inputs such as required, maxlength or even create your own validator!\r\n    // More information: https://angular.io/guide/reactive-forms#simple-form-validation\r\n    // Advanced validation: https://angular.io/guide/form-validation#reactive-form-validation\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  addTicket() {\r\n    const ticketToCreate: Ticket = this.ticketForm.getRawValue() as Ticket;\r\n    ticketToCreate.date = new Date();\r\n    ticketToCreate.student = 'Me';\r\n    this.ticketService.addTicket(ticketToCreate);\r\n  }\r\n\r\n}\r\n","<h3>Create a new ticket</h3>\r\n<form class=\"ticket-form\" [formGroup]=\"ticketForm\">\r\n  <label class=\"mt-2\" for=\"title\">\r\n    Title <br>\r\n    <input class=\"input-custom\" type=\"text\" id=\"title\" [formControlName]=\"'title'\">\r\n  </label>\r\n  <br>\r\n  <label class=\"mt-2\" for=\"description\">\r\n    Description <br>\r\n    <input class=\"input-custom\" type=\"text\" id=\"description\" [formControlName]=\"'description'\">\r\n  </label>\r\n  <br>\r\n  <label class=\"mt-2\" for=\"majoro\">\r\n    Major <br>\r\n    <input class=\"input-custom\" type=\"text\" id=\"majoro\" [formControlName]=\"'majoro'\">\r\n  </label>\r\n  <br>\r\n  <button type=\"submit\" class=\"btn-custom\" (click)=\"addTicket()\">Create</button>\r\n</form>\r\n\r\n<!-- Uncomment below to see your form structure and how it changes-->\r\n<br><br>{{ticketForm.getRawValue() | json}}"],"mappings":";;;;AAUA,OAAM,MAAOA,mBAAmB;EAU9BC,YAAmBC,WAAwB,EAASC,aAA4B;IAA7D,KAAAD,WAAW,GAAXA,WAAW;IAAsB,KAAAC,aAAa,GAAbA,aAAa;IAC/D;IACA,IAAI,CAACC,UAAU,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACvCC,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,WAAW,EAAE,CAAC,EAAE,CAAC;MACjBC,MAAM,EAAE,CAAC,EAAE;KACZ,CAAC;IACF;IACA;IACA;EACF;;EAEAC,QAAQA,CAAA,GACR;EAEAC,SAASA,CAAA;IACP,MAAMC,cAAc,GAAW,IAAI,CAACP,UAAU,CAACQ,WAAW,EAAY;IACtED,cAAc,CAACE,IAAI,GAAG,IAAIC,IAAI,EAAE;IAChCH,cAAc,CAACI,OAAO,GAAG,IAAI;IAC7B,IAAI,CAACZ,aAAa,CAACO,SAAS,CAACC,cAAc,CAAC;EAC9C;EAAC,QAAAK,CAAA,G;qBA9BUhB,mBAAmB,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAnBvB,mBAAmB;IAAAwB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVhCb,EAAA,CAAAe,cAAA,SAAI;QAAAf,EAAA,CAAAgB,MAAA,0BAAmB;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAC5BjB,EAAA,CAAAe,cAAA,cAAmD;QAE/Cf,EAAA,CAAAgB,MAAA,cAAM;QAAAhB,EAAA,CAAAkB,SAAA,SAAI;QAEZlB,EAAA,CAAAiB,YAAA,EAAQ;QACRjB,EAAA,CAAAkB,SAAA,SAAI;QACJlB,EAAA,CAAAe,cAAA,eAAsC;QACpCf,EAAA,CAAAgB,MAAA,oBAAY;QAAAhB,EAAA,CAAAkB,SAAA,UAAI;QAElBlB,EAAA,CAAAiB,YAAA,EAAQ;QACRjB,EAAA,CAAAkB,SAAA,UAAI;QACJlB,EAAA,CAAAe,cAAA,gBAAiC;QAC/Bf,EAAA,CAAAgB,MAAA,eAAM;QAAAhB,EAAA,CAAAkB,SAAA,UAAI;QAEZlB,EAAA,CAAAiB,YAAA,EAAQ;QACRjB,EAAA,CAAAkB,SAAA,UAAI;QACJlB,EAAA,CAAAe,cAAA,iBAA+D;QAAtBf,EAAA,CAAAmB,UAAA,mBAAAC,sDAAA;UAAA,OAASN,GAAA,CAAArB,SAAA,EAAW;QAAA,EAAC;QAACO,EAAA,CAAAgB,MAAA,cAAM;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;QAIhFjB,EAAA,CAAAkB,SAAA,UAAI;QAAIlB,EAAA,CAAAgB,MAAA,IAAmC;;;;QApBjBhB,EAAA,CAAAqB,SAAA,GAAwB;QAAxBrB,EAAA,CAAAsB,UAAA,cAAAR,GAAA,CAAA3B,UAAA,CAAwB;QAGKa,EAAA,CAAAqB,SAAA,GAA2B;QAA3BrB,EAAA,CAAAsB,UAAA,4BAA2B;QAKrBtB,EAAA,CAAAqB,SAAA,GAAiC;QAAjCrB,EAAA,CAAAsB,UAAA,kCAAiC;QAKtCtB,EAAA,CAAAqB,SAAA,GAA4B;QAA5BrB,EAAA,CAAAsB,UAAA,6BAA4B;QAO5EtB,EAAA,CAAAqB,SAAA,GAAmC;QAAnCrB,EAAA,CAAAuB,iBAAA,CAAAvB,EAAA,CAAAwB,WAAA,QAAAV,GAAA,CAAA3B,UAAA,CAAAQ,WAAA,IAAmC"},"metadata":{},"sourceType":"module","externalDependencies":[]}