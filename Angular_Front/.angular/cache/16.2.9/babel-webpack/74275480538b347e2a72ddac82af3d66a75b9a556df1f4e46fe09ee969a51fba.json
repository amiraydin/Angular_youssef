{"ast":null,"code":"\"use strict\";\n\n// import { Injectable } from '@angular/core';\n// import { Ticket } from '../../models/ticket';\n// import { TICKETS_MOCKED } from '../../mocks/tickets.mock';\n// import { BehaviorSubject } from 'rxjs';\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class TicketService {\n//   /**\n//    * Services Documentation:\n//    * https://angular.io/docs/ts/latest/tutorial/toh-pt4.html\n//    */\n//   private ticketList: Ticket[] = TICKETS_MOCKED;\n//   /**\n//    * Observable which contains the list of the tickets.\n//    * Naming convention: Add '$' at the end of the variable name to highlight it as an Observable.\n//    */\n//   public tickets$: BehaviorSubject<Ticket[]> = new BehaviorSubject(this.ticketList);\n//   constructor() {\n//   }\n//   addTicket(ticket: Ticket) {\n//     // You need here to update the list of ticket and then update our observable (Subject) with the new list\n//     // More info: https://angular.io/tutorial/toh-pt6#the-searchterms-rxjs-subject\n//     this.ticketList.push(ticket);\n//     this.tickets$.next(this.ticketList);\n//   }\n//   archiveTicket(ticket: Ticket) {\n//     ticket.archived = true;\n//     this.tickets$.next(this.ticketList);\n//   }\n//   // deleteTicket(ticket: Ticket): void {\n//   //   this.ticketList = this.ticketList.filter(({ title }) => title !== title);\n//   // }\n// }","map":{"version":3,"names":[],"sources":["C:\\Users\\Amir\\Desktop\\angular_tp\\Angular_Front\\src\\services\\ticket\\ticket.service.ts"],"sourcesContent":["// import { Injectable } from '@angular/core';\r\n// import { Ticket } from '../../models/ticket';\r\n// import { TICKETS_MOCKED } from '../../mocks/tickets.mock';\r\n// import { BehaviorSubject } from 'rxjs';\r\n\r\n// @Injectable({\r\n//   providedIn: 'root'\r\n// })\r\n// export class TicketService {\r\n//   /**\r\n//    * Services Documentation:\r\n//    * https://angular.io/docs/ts/latest/tutorial/toh-pt4.html\r\n//    */\r\n//   private ticketList: Ticket[] = TICKETS_MOCKED;\r\n//   /**\r\n//    * Observable which contains the list of the tickets.\r\n//    * Naming convention: Add '$' at the end of the variable name to highlight it as an Observable.\r\n//    */\r\n//   public tickets$: BehaviorSubject<Ticket[]> = new BehaviorSubject(this.ticketList);\r\n\r\n//   constructor() {\r\n//   }\r\n\r\n//   addTicket(ticket: Ticket) {\r\n//     // You need here to update the list of ticket and then update our observable (Subject) with the new list\r\n//     // More info: https://angular.io/tutorial/toh-pt6#the-searchterms-rxjs-subject\r\n//     this.ticketList.push(ticket);\r\n//     this.tickets$.next(this.ticketList);\r\n//   }\r\n\r\n//   archiveTicket(ticket: Ticket) {\r\n//     ticket.archived = true;\r\n//     this.tickets$.next(this.ticketList);\r\n//   }\r\n//   // deleteTicket(ticket: Ticket): void {\r\n//   //   this.ticketList = this.ticketList.filter(({ title }) => title !== title);\r\n//   // }\r\n// }\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script","externalDependencies":[]}