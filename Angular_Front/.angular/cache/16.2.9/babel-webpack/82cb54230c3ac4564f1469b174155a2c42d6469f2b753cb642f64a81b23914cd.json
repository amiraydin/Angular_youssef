{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/user-crud/user-api.service\";\nimport * as i3 from \"@angular/router\";\nexport class StudentService {\n  constructor(http, restApi, router) {\n    this.http = http;\n    this.restApi = restApi;\n    this.router = router;\n    this.studentList = [];\n    this.students$ = new BehaviorSubject(this.studentList);\n  }\n  loadStudents() {\n    // this.studentList = this.restApi.getUsers()\n  }\n  addAnUser(student) {\n    this.restApi.createUser(student).subscribe(data => {\n      this.router.navigate(['/tickets']);\n    });\n  }\n  static #_ = this.ɵfac = function StudentService_Factory(t) {\n    return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.UserApiService), i0.ɵɵinject(i3.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StudentService,\n    factory: StudentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","StudentService","constructor","http","restApi","router","studentList","students$","loadStudents","addAnUser","student","createUser","subscribe","data","navigate","_","i0","ɵɵinject","i1","HttpClient","i2","UserApiService","i3","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Amir\\Desktop\\angular_tp\\Angular_Front\\src\\services\\student\\student.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, catchError, retry, throwError } from 'rxjs';\r\n// import { STUDENTS_MOCKED } from 'src/mocks/student.mock';\r\nimport { Student } from 'src/models/student';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { UserApiService } from 'src/user-crud/user-api.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class StudentService {\r\n\r\n    private studentList: Student[] = [];\r\n    public students$: BehaviorSubject<Student[]> = new BehaviorSubject(this.studentList);\r\n\r\n    constructor(private http: HttpClient, public restApi: UserApiService, public router: Router) {\r\n    }\r\n\r\n    loadStudents() {\r\n        // this.studentList = this.restApi.getUsers()\r\n    }\r\n\r\n    addAnUser(student: Student) {\r\n        this.restApi.createUser(student).subscribe((data: {}) => {\r\n            this.router.navigate(['/tickets']);\r\n        })\r\n    }\r\n}"],"mappings":"AACA,SAASA,eAAe,QAAmD,MAAM;;;;;AAWjF,OAAM,MAAOC,cAAc;EAKvBC,YAAoBC,IAAgB,EAASC,OAAuB,EAASC,MAAc;IAAvE,KAAAF,IAAI,GAAJA,IAAI;IAAqB,KAAAC,OAAO,GAAPA,OAAO;IAAyB,KAAAC,MAAM,GAANA,MAAM;IAH3E,KAAAC,WAAW,GAAc,EAAE;IAC5B,KAAAC,SAAS,GAA+B,IAAIP,eAAe,CAAC,IAAI,CAACM,WAAW,CAAC;EAGpF;EAEAE,YAAYA,CAAA;IACR;EAAA;EAGJC,SAASA,CAACC,OAAgB;IACtB,IAAI,CAACN,OAAO,CAACO,UAAU,CAACD,OAAO,CAAC,CAACE,SAAS,CAAEC,IAAQ,IAAI;MACpD,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC,CAAC;EACN;EAAC,QAAAC,CAAA,G;qBAhBQd,cAAc,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,cAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdvB,cAAc;IAAAwB,OAAA,EAAdxB,cAAc,CAAAyB,IAAA;IAAAC,UAAA,EAHX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}