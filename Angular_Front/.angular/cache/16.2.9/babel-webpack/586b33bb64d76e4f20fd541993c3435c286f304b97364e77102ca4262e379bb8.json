{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/user-crud/user-api.service\";\nimport * as i2 from \"@angular/router\";\nexport class StudentService {\n  constructor(restApi, router) {\n    this.restApi = restApi;\n    this.router = router;\n    this.studentList = [];\n    this.students$ = new BehaviorSubject(this.studentList);\n  }\n  loadStudents(obj) {\n    return this.restApi.getUsers().subscribe(data => {\n      obj = data;\n    });\n  }\n  addAnUser(student) {\n    this.restApi.createUser(student).subscribe(data => {\n      this.router.navigate(['/tickets']);\n    });\n  }\n  static #_ = this.ɵfac = function StudentService_Factory(t) {\n    return new (t || StudentService)(i0.ɵɵinject(i1.UserApiService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StudentService,\n    factory: StudentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","StudentService","constructor","restApi","router","studentList","students$","loadStudents","obj","getUsers","subscribe","data","addAnUser","student","createUser","navigate","_","i0","ɵɵinject","i1","UserApiService","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Amir\\Desktop\\angular_tp\\Angular_Front\\src\\services\\student\\student.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, catchError, retry, throwError } from 'rxjs';\r\n// import { STUDENTS_MOCKED } from 'src/mocks/student.mock';\r\nimport { Student } from 'src/models/student';\r\nimport { UserApiService } from 'src/user-crud/user-api.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class StudentService {\r\n\r\n    private studentList: Student[] = [];\r\n    public students$: BehaviorSubject<Student[]> = new BehaviorSubject(this.studentList);\r\n\r\n    constructor(public restApi: UserApiService, public router: Router) {\r\n    }\r\n\r\n    loadStudents(obj: any) {\r\n        return this.restApi.getUsers().subscribe((data: {}) => { obj = data });\r\n    }\r\n\r\n    addAnUser(student: Student) {\r\n        this.restApi.createUser(student).subscribe((data: {}) => {\r\n            this.router.navigate(['/tickets']);\r\n        })\r\n    }\r\n}"],"mappings":"AACA,SAASA,eAAe,QAAmD,MAAM;;;;AAUjF,OAAM,MAAOC,cAAc;EAKvBC,YAAmBC,OAAuB,EAASC,MAAc;IAA9C,KAAAD,OAAO,GAAPA,OAAO;IAAyB,KAAAC,MAAM,GAANA,MAAM;IAHjD,KAAAC,WAAW,GAAc,EAAE;IAC5B,KAAAC,SAAS,GAA+B,IAAIN,eAAe,CAAC,IAAI,CAACK,WAAW,CAAC;EAGpF;EAEAE,YAAYA,CAACC,GAAQ;IACjB,OAAO,IAAI,CAACL,OAAO,CAACM,QAAQ,EAAE,CAACC,SAAS,CAAEC,IAAQ,IAAI;MAAGH,GAAG,GAAGG,IAAI;IAAC,CAAC,CAAC;EAC1E;EAEAC,SAASA,CAACC,OAAgB;IACtB,IAAI,CAACV,OAAO,CAACW,UAAU,CAACD,OAAO,CAAC,CAACH,SAAS,CAAEC,IAAQ,IAAI;MACpD,IAAI,CAACP,MAAM,CAACW,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC,CAAC;EACN;EAAC,QAAAC,CAAA,G;qBAhBQf,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdtB,cAAc;IAAAuB,OAAA,EAAdvB,cAAc,CAAAwB,IAAA;IAAAC,UAAA,EAHX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}